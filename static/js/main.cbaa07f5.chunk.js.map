{"version":3,"sources":["Components/SearchBox/SearchBox.js","Components/CardLists/Card/Card.js","Components/CardLists/CardPopup/CardPopup.js","Components/Common/Dropdown/Dropdown.js","Service/users.api.js","Components/CardLists/CardList/CardList.js","Components/Common/Loader/Loader.js","Components/Empty/Empty.js","Service/search.api.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","props","handleChange","event","setState","value","target","handleSubmit","preventDefault","state","setCurrentUserList","className","onSubmit","e","autoComplete","type","name","this","placeholder","onChange","src","alt","onClick","Component","Card","user","avatar_url","login","score","id","handleUserDetail","CardPopup","currentUser","public_repos","following","followers","created_at","site_admin","html_url","href","rel","handlePopup","Dropdown","handleDropDown","showDropdown","getCurrentSort","sortItems","listItems","find","a","currentSortId","handleSort","sortHandler","openListItem","map","l","key","fetchCurrentUser","userName","fetch","res","CardList","fetchUserDetails","userDetail","getCurrentUserDetails","response","json","data","prevState","userDetails","val","showPopup","currentUserName","userList","u","userLen","length","nextProps","Loader","Empty","search","fetchAllUser","Main","fetchAllUsers","showLoader","showEmpty","items","JSON","parse","stringify","sort","b","title","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cbaa07f5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./SearchBox.scss\";\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.value) return;\n    this.props.setCurrentUserList(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"gca-search_wrapper\">\n        <form\n          onSubmit={(e) => this.handleSubmit(e)}\n          className=\"gca-search_form\"\n          autoComplete=\"off\"\n        >\n          <div className=\"gca-search_form_label\">\n            <input\n              className=\"gca-search_form_input\"\n              type=\"text\"\n              name=\"name\"\n              target=\"_blank\"\n              value={this.state.value}\n              placeholder=\"Enter Github Username...\"\n              onChange={(e) => this.handleChange(e)}\n            />\n            <img\n              src=\"./images/icons8-search.svg\"\n              className=\"gca-search_form_img_btn\"\n              alt=\"img\"\n              onClick={(e) => this.handleSubmit(e)}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport \"./Card.scss\";\n\nclass Card extends Component {\n  render() {\n    let { avatar_url, login, score, id } = this.props.user;\n    return (\n      <div\n        className=\"gca-card\"\n        onClick={() => this.props.handleUserDetail(this.props.user.login, true)}\n      >\n        <div className=\"gca-card_avatar\">\n          <img className=\"gca-card_avatar_img\" src={avatar_url} alt=\"img\" />\n        </div>\n        <div className=\"gca-card_name\">@{login}</div>\n        <div className=\"as\">Id: {id} </div>\n        <div className=\"gca-card_score\">Score: {score}</div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./CardPopup.scss\";\n\nclass CardPopup extends Component {\n  render() {\n    const {\n      public_repos,\n      following,\n      followers,\n      created_at,\n      site_admin,\n      html_url,\n      name,\n      login,\n      avatar_url,\n    } = this.props.currentUser;\n    return (\n      <div>\n        <div className=\"gca-overlay\"></div>\n        <div className=\"gca-popup\">\n          <div className=\"gca-popup_img\"></div>\n          {site_admin ? <div className=\"gca-popup_admin\">ADMIN</div> : null}\n          <div className=\"gca-popup_cont_wrap\">\n            <div className=\"gca-popup_cont_wrap_tr\">\n              <div className=\"gca-popup_cont\">\n                <img\n                  className=\"gca-popup_cont_img\"\n                  src={avatar_url}\n                  alt=\"img\"\n                />\n                <div className=\"gca-popup_cont_name\"> {name}</div>\n                <div className=\"gca-popup_cont_username\">@{login}</div>\n              </div>\n              <div className=\"gca-popup_info_wrap\">\n                <div className=\"gca-popup_info_created\">\n                  Created at {created_at}\n                </div>\n                <div className=\"gca-popup_info\">\n                  <div className=\"gca-popup_info_item\">\n                    <div className=\"gca-popup_info_count\">{public_repos}</div>\n                    <div className=\"gca-popup_info_head\">\n                      <a href={html_url + \"?tab=repositories\"} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Repo\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"gca-popup_info_item gca-popup_info_item_c\">\n                    <div className=\"gca-popup_info_count\">{followers}</div>\n                    <div className=\"gca-popup_info_head\">\n                      <a href={html_url + \"/followers\"} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Followers\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"gca-popup_info_item\">\n                    <div className=\"gca-popup_info_count\">{following}</div>\n                    <div className=\"gca-popup_info_head\">\n                      <a href={html_url + \"/following\"} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Following\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <span\n            className=\"gca-popup_close\"\n            onClick={() => this.props.handlePopup(false)}\n          >\n            X\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardPopup;\n","import React, { Component } from \"react\";\nimport \"./Dropdown.scss\";\nclass Dropdown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openListItem: false,\n      showDropdown: false,\n    };\n  }\n  handleDropDown = () => {\n    this.setState({ showDropdown: !this.state.showDropdown });\n  };\n  getCurrentSort = () => {\n    let p = this.props.sortItems.listItems.find(\n      (a) => a.id === this.props.sortItems.currentSortId\n    );\n    return p.name;\n  };\n  handleSort = (id) => {\n    if (id !== this.props.sortItems.currentSortId) {\n      this.props.sortHandler(id);\n    }\n    this.handleDropDown();\n  };\n  render() {\n    return (\n      <div className=\"gca-dropdown_wrapper gca-card_list_items\">\n        <div\n          className=\"gca-dropdown_head\"\n          onClick={() => this.handleDropDown()}\n        >\n          {this.getCurrentSort()}\n        </div>\n        {this.state.showDropdown ? (\n          <div className=\"gca-dropdown_list\">\n            {this.props.sortItems.listItems.map((l) => {\n              return (\n                <div\n                  className=\"gca-dropdown_listItems\"\n                  onClick={() => this.handleSort(l.id)}\n                  key={l.id}\n                >\n                  {l.name}\n                </div>\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","const user = {\n  fetchCurrentUser: async (userName) => {\n    const res = await fetch(` https://api.github.com/users/${userName}`);\n    return res;\n  },\n};\n\nexport default user;\n","import React, { Component } from \"react\";\nimport Card from \"../Card/Card\";\nimport CardPopup from \"../CardPopup/CardPopup\";\nimport DropDown from \"../../Common/Dropdown/Dropdown\";\nimport user from '../../../Service/users.api'\nimport \"./CardList.scss\";\n\nclass CardList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUserName: this.props.userList,\n      userDetails: [],\n      currentUser: {},\n      showPopup: false,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userList !== prevState.currentUserName) {\n      return { currentUserName: nextProps.userList };\n    } else return null;\n  }\n\n  fetchUserDetails = async (userName) => {\n    let userDetail = this.getCurrentUserDetails(userName);\n    if (!userDetail) {\n      let response = await user.fetchCurrentUser(userName);\n      let data = await response.json();\n      this.setState((prevState) => ({\n        userDetails: [...prevState.userDetails, data],\n        currentUser: { ...data },\n      }));\n    } else this.setState({ currentUser: userDetail });\n  };\n\n  getCurrentUserDetails(userName) {\n    let user = this.state.userDetails.find((u) => u.login === userName);\n    return user;\n  }\n\n  handleUserDetail = async (userName, val) => {\n    await this.fetchUserDetails(userName);\n    this.handlePopup(val);\n    return;\n  };\n\n  handlePopup = (val) => {\n    this.setState({ showPopup: val });\n  };\n\n  render() {\n    const userLen = this.state.currentUserName.userList.length;\n\n    return (\n      <div>\n        {this.state.currentUserName.userList && userLen ? (\n          <div className=\"gca-card_list_wrapper\">\n            <div className=\"gca-card_list_drop_card_wrap\">\n              <div className=\"gca-card_list_wrapper_details\">\n                <div className=\"gca-card_list_wrapper_result gca-card_list_items\">\n                  Search Results({userLen === 30 ? \"30+\" : userLen})\n                </div>\n                <div className=\"gca-card_list_wrapper_username gca-card_list_items\">\n                  Username Searched -{\" \"}\n                  <strong>{this.state.currentUserName.name}</strong>\n                </div>\n                <DropDown\n                  sortItems={this.props.sortItems}\n                  sortHandler={(id) => this.props.sortHandler(id)}\n                />\n              </div>\n              <div className=\"gca-card_list\">\n                {this.state.currentUserName.userList.map((user) => (\n                  <Card\n                    user={user}\n                    key={user.id}\n                    handleUserDetail={(userName, val) =>\n                      this.handleUserDetail(userName, val)\n                    }\n                  />\n                ))}\n              </div>\n            </div>\n            {this.state.showPopup ? (\n              <CardPopup\n                currentUser={this.state.currentUser}\n                handlePopup={(val) => this.handlePopup(val)}\n              />\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport \"./Loader.scss\";\nclass Loader extends Component {\n  render() {\n    return (\n      <div className=\"gca-loader\">\n        <img src=\"./images/2.svg\" alt=\"img\" />\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import React from \"react\";\nimport \"./Empty.scss\";\n\nfunction Empty() {\n  return (\n    <div className=\"gca-empty-wrapper\">\n      <img\n        src=\"./images/no_results_found.png\"\n        className=\"gca-empty-result\"\n        alt=\"no_result_found\"\n      />\n    </div>\n  );\n}\n\nexport default Empty;\n","const search = {\n  fetchAllUser: async (userName) => {\n    const res = await fetch(\n      `https://api.github.com/search/users?q=${userName}`\n    );\n    return res;\n  },\n};\n\nexport default search;\n","import React, { Component } from \"react\";\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\nimport CardList from \"./Components/CardLists/CardList/CardList\";\nimport Loader from \"./Components/Common/Loader/Loader\";\nimport Empty from \"./Components/Empty/Empty\";\nimport search from \"./Service/search.api\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userList: {},\n      currentUserName: [],\n      showLoader: false,\n      showEmpty: false,\n      sortItems: {\n        title: \"Sort By\",\n        currentSortId: 0,\n        listItems: [\n          {\n            name: \"Relevance\",\n            id: 0,\n          },\n          {\n            name: \"High to Low Score\",\n            id: 1,\n          },\n          {\n            name: \"Low to High Score\",\n            id: 2,\n          },\n        ],\n      },\n    };\n  }\n\n  fetchAllUsers = async (userName) => {\n    try {\n      this.setState({ showLoader: true, showEmpty: false });\n      let response = await search.fetchAllUser(userName);\n      let data = await response.json();\n      let showEmpty = false;\n      if (!data.items.length) {\n        showEmpty = true;\n        this.setState(() => ({\n          showLoader: false,\n          showEmpty: showEmpty,\n        }));\n        return;\n      } else {\n        this.setState((prevState) => ({\n          userList: { [userName]: data.items, ...prevState.userList },\n          showLoader: false,\n          showEmpty: showEmpty,\n        }));\n      }\n    } catch {\n      this.setState(() => ({\n        showLoader: false,\n        showEmpty: false,\n      }));\n    }\n  };\n\n  setCurrentUserList = async (userName) => {\n    let userList = this.state.userList[userName];\n    if (!userList) {\n      await this.fetchAllUsers(userName);\n      userList = this.state.userList[userName];\n      this.setState({\n        currentUserName: {\n          name: userName,\n          userList,\n        },\n      });\n      return;\n    } else {\n      this.setState({\n        currentUserName: {\n          name: userName,\n          userList,\n        },\n        showEmpty: false,\n      });\n    }\n  };\n\n  sortHandler = (id = 0) => {\n    let currentUser =  JSON.parse(JSON.stringify(this.state.currentUserName));\n    switch (id) {\n      case 1:\n        currentUser.userList.sort((a, b) => b.id - a.id);\n        this.setState((prevState) => ({\n          currentUserName: currentUser,\n          sortItems: { ...prevState.sortItems, currentSortId: id },\n        }));\n        break;\n      case 2:\n        currentUser.userList.sort((a, b) => a.id - b.id);\n        this.setState((prevState) => ({\n          currentUserName: currentUser,\n          sortItems: { ...prevState.sortItems, currentSortId: id },\n        }));\n        break;\n      default:\n        this.setState((prevState) => ({\n          currentUserName: {\n            name: currentUser.name,\n            userList: [ ...this.state.userList[currentUser.name] ],\n          },\n          sortItems: { ...prevState.sortItems, currentSortId: id },\n        }));\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <SearchBox setCurrentUserList={this.setCurrentUserList} />\n\n        {this.state.showLoader ? <Loader /> : null}\n        {this.state.currentUserName &&\n        !this.state.showLoader &&\n        this.state.currentUserName.userList &&\n        this.state.currentUserName.userList.length > 0 ? (\n          <CardList\n            userList={this.state.currentUserName}\n            sortHandler={this.sortHandler}\n            sortItems={this.state.sortItems}\n          />\n        ) : (\n          null\n        )}\n        {this.state.showEmpty ? <Empty /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}